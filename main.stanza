; Generated by JITX 2eaba7760602d168bf12b0fa7704dcb631c4981e
#use-added-syntax(jitx)
defpackage main :
  import core
  import jitx
  import jitx/commands
  import ocdb/utils/generic-components
  import ocdb/utils/landpatterns
  import helpers

; Define the shape/size of the board
val board-shape = RoundedRectangle(35.0, 20.0, 0.25)

; Module to run as a design
pcb-module my-design :


  inst flash :  components/IS66WV1M16EALL/component
  cap-strap(flash.VDD, flash.GND, 22.0e-6)


  val n-pins = 6 * 8

  inst top-header : pin-header(n-pins / 2 - 1 , pitch = 25.4 * 0.05, padsize = pth-pad(0.25))
  inst bottom-header : pin-header(n-pins / 2 - 1, pitch = 25.4 * 0.05,  padsize = pth-pad(0.25))

  val y = 7.0 * 0.05 * 25.4
  place(top-header) at loc(0.0, y) on Top
  place(bottom-header) at loc(0.0, y * -1.0) on Top

  ; Pin mapping 

  pcb-bundle breakout :
    pin p 

  for p in pins(flash) do :
    supports breakout :
      breakout.p => p
    
  require escape : breakout[46]

  for (t in pins(top-header), i in 1 to 23) do :
    net (t escape[i].p)

  for (t in pins(bottom-header), i in 1 to 23) do :
    net (t escape[i + 23].p)







; Set the design name     - a directory with this name will be generated under the "designs" directory
;     the board           - a Board object
;     [optional] rules    - the PCB design rules (if not givn default rules will be used)
;     [optional] vendors  - Strings or AuthorizedVendors (if not give default vendors will be used)
;     [optional] quantity - Minimum stock quantity the vendor should carry (if not give default quantity will be used)
setup-design(
  "jitx-design",
  ocdb/utils/defaults/default-board(ocdb/manufacturers/stackups/jlcpcb-jlc2313, board-shape)
  rules = ocdb/manufacturers/rules/jlcpcb-rules
)

; Set the schematic sheet size
set-paper(ANSI-A)

; Set the top level module (the module to be compile into a schematic and PCB)
set-main-module(my-design)

; Use any helper function from helpers.stanza here
; run-check-on-design(my-design)

; View the results
view-board()
view-schematic()
